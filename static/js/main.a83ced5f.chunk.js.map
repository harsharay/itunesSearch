{"version":3,"sources":["Components/Individual/Individual.jsx","Components/Results/Results.jsx","Components/Main/Main.jsx","App.js","serviceWorker.js","Reducers/RootReducer.js","Sagas/Saga.js","index.js"],"names":["Individual","data","useState","indi_data","setIndi_Data","className","onClick","e","style","height","width","src","artworkUrl100","alt","trackName","collectionName","href","previewUrl","target","trackPrice","collectionPrice","connect","state","test","entity","singleData","dispatch","handleSelect","item","type","payload","handleClick","results","onChange","option","value","map","index","key","trackId","artistViewUrl","length","searched_data","props","input","setInput","App","Boolean","window","location","hostname","match","initState","query","id","RootReducer","action","callingApi","changingEntity","singleApiCall","rootSaga","select","call","fetch","response","json","put","entityVal","all","indi_id","takeLatest","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a83ced5f.chunk.js","sourcesContent":["import React,{ useState } from 'react'\r\n\r\nimport \"./Individual.styles.css\"\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel'\r\n\r\nfunction Individual({ data }) {\r\n\r\n    const [indi_data,setIndi_Data] = useState(data)\r\n\r\n    const handleClose = e => {\r\n        setIndi_Data(null)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n        {indi_data ? \r\n            <div className=\"individual_data\">\r\n            {/* <h3 onClick={handleClose} className=\"close\">Close</h3> */}\r\n            <CancelIcon onClick={handleClose} className=\"close\" style={{height:'30px',width:'30px'}}/>\r\n            <img src={data.artworkUrl100} alt={data.trackName} />\r\n                <div className=\"individual_data_content\">\r\n                \r\n                <h1>{data.trackName}</h1>\r\n                <h3>{data.collectionName}</h3>\r\n                {/* <a href={data.artistViewUrl} target=\"_blank\">View this artist in Itunes</a> */}\r\n                <a href={data.previewUrl} target=\"_blank\">Preview</a>\r\n                <h4>Song Price:{data.trackPrice}</h4>\r\n                <h4>Collection Price:{data.collectionPrice}</h4>\r\n                </div>\r\n            </div>\r\n            :\r\n            null}\r\n         </div>\r\n    )\r\n}\r\n\r\nexport default Individual\r\n","import React,{ useState } from 'react'\r\nimport Individual from \"../Individual/Individual\"\r\n\r\nimport { connect } from \"react-redux\"\r\n\r\nimport \"./Results.styles.css\"\r\n\r\nfunction Results({ results,handleSelect,test,handleClick,indi_data }) {\r\n\r\n    // const [individual_data,setIndividualData] = useState(\"\")\r\n    // const handleClose = () => {\r\n    //     setIndividualData([])\r\n    // }\r\n\r\n\r\n    return (\r\n        <>\r\n            <select onChange={e => {\r\n                let option = e.target.value\r\n                handleSelect(option)\r\n            }} className=\"options-dropdown\"\r\n                value={test}>\r\n                <option value=\"all\">All</option>\r\n                <option value=\"movie\">Movie</option>\r\n                <option value=\"song\">Songs</option>\r\n                <option value=\"album\">Albums</option>\r\n            </select>\r\n            <div className=\"results\">\r\n            \r\n                {results.map((item,index) => {\r\n                return(\r\n                    <div key={index} className=\"indi\" onClick={() => {handleClick(item.trackId)}}>\r\n                        <h1>{item.trackName}</h1>\r\n                        <h3>{item.collectionName}</h3>\r\n                        <img src={item.artworkUrl100} alt={item.trackName} />\r\n                        <a href={item.artistViewUrl} target=\"_blank\">View this artist in Itunes</a>\r\n                        <a href={item.previewUrl} target=\"_blank\">Listen to song Preview</a>\r\n                        <h4>Song Price:{item.trackPrice}</h4>\r\n                        <h4>Collection Price:{item.collectionPrice}</h4>\r\n                    </div>\r\n                )\r\n            })}\r\n            </div>\r\n            {indi_data.length>0 ?\r\n                <Individual data={indi_data[0]}/>\r\n                \r\n            :\r\n                null\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStatetoProps = state => {\r\n    return {\r\n        test : state.entity,\r\n        indi_data : state.singleData\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        handleSelect : (item) => dispatch({ type: \"CHANGE_ENTITY\", payload: item }),\r\n        handleClick : (item) => dispatch({ type:\"INDIVIDUAL_SELECT\",payload: item })\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStatetoProps,mapDispatchToProps)(Results)\r\n","import React,{ useState } from 'react'\r\nimport Results from \"../Results/Results\"\r\nimport \"./Main.styles.css\"\r\n\r\nimport { connect } from \"react-redux\"\r\n\r\nimport { Input,Button } from 'antd';\r\n\r\n\r\n\r\nfunction Main(props) {\r\n    const [input,setInput] = useState(\"\")\r\n\r\n\r\n\r\n    const handleChange = e => {\r\n        let { value } = e.target\r\n        setInput(value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Search for an artist, movie, audio track, album... anything</h2>\r\n            <br />\r\n            <Input onChange={handleChange}/>\r\n            <Button onClick={() => props.handleClick(input)}>Search</Button>\r\n            {props.searched_data.length>0 ?\r\n            <Results results={props.searched_data}/>\r\n            :\r\n            <h3 className=\"empty\">Wow, such empty</h3>}\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searched_data : state.data,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        handleClick : (item) => dispatch({ type:\"SEARCH\",payload: item })\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Main);\r\n","import React from 'react';\nimport Main from \"./Components/Main/Main\"\nimport './App.css';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <h1>ITUNES SEARCH</h1>\n      </header>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    query:\"\",\r\n    data : [],\r\n    entity: \"all\",\r\n    id: \"\",\r\n    singleData:[]\r\n}\r\n\r\n\r\nconst RootReducer = (state=initState,action) => {\r\n    if(action.type===\"SEARCH\"){\r\n        return {\r\n            ...state,\r\n            query: action.payload\r\n        }\r\n    } else if(action.type===\"SEARCH_API_CALL\"){\r\n        return {\r\n            ...state,\r\n            data : action.payload\r\n        }\r\n    } else if(action.type===\"CHANGE_ENTITY\"){\r\n        return {\r\n            ...state,\r\n            entity : action.payload\r\n        }\r\n    } else if(action.type===\"ASYNC_CHANGE_ENTITY\"){\r\n        return {\r\n            ...state,\r\n            data : action.payload\r\n        }\r\n    } else if(action.type===\"INDIVIDUAL_SELECT\"){\r\n        return {\r\n            ...state,\r\n            id : action.payload\r\n        }\r\n    } else if(action.type===\"INDI_ASYNC_CALL\"){\r\n        return {\r\n            ...state,\r\n            singleData: action.payload\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default RootReducer;","import { takeLatest,call,select,put,fork,all } from \"redux-saga/effects\"\r\n\r\nlet query = state => state.query\r\nlet entity = state => state.entity\r\nlet id = state => state.id\r\n\r\n//WORKER SAGAs\r\nfunction* callingApi() {\r\n    const input = yield select(query)\r\n    const response = yield call(fetch,`https://itunes.apple.com/search?term=${input}`)\r\n    const data = yield response.json()\r\n    yield put({ type: 'SEARCH_API_CALL',payload: data.results })\r\n}\r\n\r\nfunction* changingEntity() {\r\n    let entityVal = yield select(entity)\r\n    if(entityVal!==all){\r\n        const input = yield select(query)\r\n        const response = yield call(fetch,`https://itunes.apple.com/search?term=${input}&entity=${entityVal}`)\r\n        const data = yield response.json()\r\n        yield put({ type: \"ASYNC_CHANGE_ENTITY\",payload: data.results })\r\n    } else {\r\n        const input = yield select(query)\r\n        const response = yield call(fetch,`https://itunes.apple.com/search?term=${input}`)\r\n        const data = yield response.json()\r\n        yield put({ type: \"ASYNC_CHANGE_ENTITY\",payload: data.results })\r\n    }\r\n    \r\n}\r\n\r\n\r\nfunction* singleApiCall() {\r\n    let indi_id = yield select(id)\r\n    const response = yield call(fetch,`https://itunes.apple.com/search?term=${indi_id}`)\r\n    const data = yield response.json()\r\n    yield put({ type:\"INDI_ASYNC_CALL\",payload: data.results })\r\n}\r\n\r\n\r\n//WATCHER SAGAs\r\nexport function* ApiCall() {\r\n    yield takeLatest(\"SEARCH\", callingApi)\r\n}\r\n\r\nexport function* changeEntity() {\r\n    yield takeLatest(\"CHANGE_ENTITY\", changingEntity)\r\n}\r\n\r\nexport function* individualCall() {\r\n    yield takeLatest(\"INDIVIDUAL_SELECT\", singleApiCall)\r\n}\r\n\r\nexport function* rootSaga() {\r\n   yield all([\r\n    takeLatest(\"SEARCH\", callingApi),\r\n    takeLatest(\"CHANGE_ENTITY\", changingEntity),\r\n    takeLatest(\"INDIVIDUAL_SELECT\", singleApiCall)\r\n   ])    \r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport RootReducer from \"./Reducers/RootReducer\"\nimport { rootSaga } from \"./Sagas/Saga\"\n\nimport  { createStore,applyMiddleware } from 'redux'\n\nimport { Provider } from \"react-redux\"\n\nimport createSagaMiddleware from \"redux-saga\"\n\n\n\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(RootReducer,applyMiddleware(sagaMiddleware))\n\nsagaMiddleware.run(rootSaga)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}